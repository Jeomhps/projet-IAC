---
- name: Build and Redeploy Docker Containers
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    docker_password: "test"
    container_count: 10
  tasks:
    - name: Get Dockerfile hash
      ansible.builtin.stat:
        path: "./Dockerfile"
        checksum_algorithm: sha256
      register: dockerfile_hash

    - name: Build custom Alpine image (if Dockerfile changed)
      community.docker.docker_image:
        name: custom-alpine-ansible
        build:
          path: "."
          pull: yes
          args:
            DOCKERFILE_HASH: "{{ dockerfile_hash.stat.checksum }}"
            PASSWORD: "{{ docker_password }}"
        source: build
      when: dockerfile_hash.stat.checksum is defined

    - name: Remove ALL existing containers
      community.docker.docker_container:
        name: "alpine-container-{{ item }}"
        state: absent
        force_kill: yes
      loop: "{{ range(1, container_count + 1) | list }}"
      ignore_errors: yes

    - name: Run new containers
      community.docker.docker_container:
        name: "alpine-container-{{ item }}"
        image: custom-alpine-ansible
        state: started
        detach: yes
        ports:
          - "222{{ item }}:22"
        recreate: yes
      loop: "{{ range(1, container_count + 1) | list }}"

    - name: Remove old SSH host keys from known_hosts (for all containers)
      ansible.builtin.shell: |
        ssh-keygen -R "[localhost]:222{{ item }}" 2>/dev/null || true
      loop: "{{ range(1, container_count + 1) | list }}"
      delegate_to: localhost
      run_once: no
      changed_when: false

    - name: Add new SSH host keys to known_hosts
      ansible.builtin.shell: |
        ssh-keyscan -p 222{{ item }} localhost >> ~/.ssh/known_hosts 2>/dev/null
      loop: "{{ range(1, container_count + 1) | list }}"
      delegate_to: localhost
      run_once: no
      changed_when: false
      retries: 3
      delay: 2
      until: true
