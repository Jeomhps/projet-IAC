---
- name: Remove existing containers listed in machines.yml
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    inventory_yaml: "{{ playbook_dir }}/machines.yml"
    remove_inventory: false
  tasks:
    - name: Check if inventory YAML exists
      ansible.builtin.stat:
        path: "{{ inventory_yaml }}"
      register: inv_stat

    - name: Load machines from YAML
      ansible.builtin.set_fact:
        machines_obj: "{{ lookup('ansible.builtin.file', inventory_yaml) | from_yaml }}"
      when: inv_stat.stat.exists

    - name: Normalize machines list
      ansible.builtin.set_fact:
        machines: "{{ (machines_obj.machines if (machines_obj is mapping and 'machines' in machines_obj) else machines_obj) | list }}"
      when: inv_stat.stat.exists

    - name: No inventory found or empty â€” nothing to unprovision
      ansible.builtin.debug:
        msg: "No machines found in {{ inventory_yaml }}. Nothing to unprovision."
      when: not inv_stat.stat.exists or (machines | default([]) | length) == 0

    - name: Remove containers listed in machines.yml
      community.docker.docker_container:
        name: "{{ item.name }}"
        state: absent
        force_kill: yes
      loop: "{{ machines | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes
      when: inv_stat.stat.exists and (machines | length) > 0

    - name: Remove SSH host keys for each machine
      ansible.builtin.shell: >
        ssh-keygen -R "[{{ item.host }}]:{{ item.port }}" 2>/dev/null || true
      loop: "{{ machines | default([]) }}"
      changed_when: false
      when: inv_stat.stat.exists and (machines | length) > 0

    - name: remove the inventory file
      ansible.builtin.file:
        path: "{{ inventory_yaml }}"
        state: absent
